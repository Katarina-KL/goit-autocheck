/* 1. Подключение CSS файлов к странице в index.html */

/* 2. Синтаксис CSS правила */
p { 
   color: red; 
   font-size: 20px; 
}

/*  3. Селекторы и вес селектора: любой элемент, приоритет без ранга */
* { 
   margin: 0; 
   padding: 0; 
}

/* 4. Селекторы и вес селектора: тег, приоритет 4-го ранга */
li { 
   list-style: none; 
   color: green; 
}

/* 5.Селекторы и вес селектора: класс, приоритет 3-го ранга */
.rule { 
   list-style: upper-roman; 
   color: navy; 
}

/* 6. Селекторы и вес селектора: избегаем повторения кодa. 
создавать для общих правил один отдельный класс и несколько классов для уникальных правил. 
DRY (don't repeat yourself) 
Двум элементам с классом common-rule добавлены классы first-rule и last-rule, т.е. создана композиция с классом common-rule.*/
common-rule { 
   list-style: upper-roman; 
   font-size: 20px; 
} 
.first-rule { 
   color:red; 
} 
.last-rule { 
   color: green; 
}

/* 7. Селекторы и вес селектора: композиций классов, приоритет через суммирование разрядов */
.btn { 
   border: none; 
   padding: .25rem 1.25rem; 
} 
.link { 
   text-decoration: none;
   color: navy; 
} 
/* Напиши свой код под этой строкой */ 
.btn.active { 
   color:red; 
} 
.link.active { 
   font-weight: 700; 
}

/* 8. Селекторы и вес селектора: псевдокласс, приоритет 3-го ранга. перечислить два разных селектора для одного набора CSS правил */
.link { 
   text-decoration: none; 
   color: navy; 
   opacity: 0.5; } 
   /* Напиши свой код под этой строкой */ 
.link:hover, 
.link:focus { 
   opacity: 1; 
}

/* 9. Селекторы и вес селектора: атрибут, приоритет 3-го ранга. Повышаем специфичность */
[type] {
   color: white;
}

button[type="reset"] {
   color: green;
}

/* 10. Селектор атрибута: символ ^. для выбора тех значений атрибута, которые начинаются с определенных символов. 
#ancor" начинается с "# */
.link {
   text-decoration: none;
}

[href^="./"] {
	color: red; 
}

[href^="https"] {
	color: navy; 
}

/* 11. Селектор атрибута: символ $ */
.link {
   text-decoration: none;
}

[href$="html"] {
	color: green; 
}

[href$="css"] {
	color: orangered; 
}

/* 12. Селектор атрибута: символ * */
.link {
	text-decoration: none;
}
[href*="about"] {
	color: green; 
}
[href*="com"] {
	color: orangered;
}

/* 13. Селекторы и вес селектора: id, приоритет 2-го ранга */
.warning {
      background-color: white;
      color: red;
}

#sending {
	background-color: teal;
	color: white;
}

/* 14. Инлайн стили, приоритет 1-го разряда */
.warning {
background-color: white;
color: red;
}
#inline {
background-color: teal;
color: white;
}

/* 15. !important, приоритет с повышением ранга селектора. */
div {
background-color: navy !important;
color: white !important;
}
.warning {
background-color: white;
color: red;
}
#inlinee {
background-color: red;
color: white;
}

/* 16. Селекторы отношений по родству. Прямой потомок. Прямой потомок элемента в селекторе задается с помощью символа > */
ul {
padding: 0;
list-style: none;
}

.menu >.menu-item {
display: inline-block;
vertical-align: top;
}

/* 17. Селекторы отношений по родству. Любой потомок. */
ul {
padding: 0;
list-style: none;
}

.menu > .menu-item  {
display: inline-block;
vertical-align: top;
opacity: 1;
}

.sub-menu .menu-item {
opacity: 0;
margin-left: 100px;
}

.menu-item:hover .menu-item {
opacity: 1;
} 

/* 18. Селекторы отношений по соседству. Первый сосед. */
.item-1 + .item {
color: red;
}

/* 19. Селекторы отношений по соседству. Любой нижний сосед. */
.item-2 ~ .item {
color: red;
}

/* 20. Каскад. Приоритет при равенстве селекторов. */
.headline.title{
color: navy;
}

.title[title] {
color: maroon;
}

/* 21. Каскад. Наследование. */
.cards {
	color: navy; 
}
.last-of-type {
	color: firebrick; 
}

/* 22. Каскад. Исключения в наследовании. */
.list {
padding-left: 0;
list-style: none;
color: green;
}
.list-link {
color: green; 
}

/* 23. Подключение CSS файлов к странице в index.html */

/* 24. Цвет в CSS: rgb */
.box {
	color: rgb(255,255,255);
	background-color: rgb(0,0,0);
}

.red {
   background-color: rgb(255,0,0);
}

.green {
	background-color: rgb(0,255,0);
}

.blue {
	background-color: rgb(0,0,255)
}

/* 25. Цвет в CSS: hex */
.box {
	color: #fff;
	background-color: #000;
}

.red {
	background-color: #f00;
}

.green {
	background-color: #0f0;
}

.blue {
	background-color: #00f;
}

/* 26. Цвет в CSS: hsl */
.lightness {
   width: 50px;
   height: 50px;
   line-height: 50px;
   margin: 0.5rem;
   text-align: center;
   border: 1px solid gold;
}
.lightness-100 {
   background-color: hsl(0, 100%, 100%);
}
.lightness-75 {
   background-color: hsl(0, 100%, 75%);
}
.lightness-50 {
   background-color: hsl(0, 100%, 50%);
}
.lightness-25 {
   background-color: hsl(0, 100%, 25%);
color: hsl(0, 0%, 100%);
}
.lightness-0 {
   background-color: hsl(0, 100%, 0%);
color: hsl(0, 0%, 100%);
}

/* 27. Прозрачность: opacity и transparent */
.container {
padding: 1rem;
background-color: navy;
}

.box {
width: 200px;
height: 50px;
margin: 1rem auto;
color: #fff;
font-size: 24px;
line-height: 50px;
text-align: center;
cursor: pointer;
background-color: orchid;
border: 4px solid gold;
}

.opacity {
opacity: .5;
}

/* Напиши код под этой строкой */
.opacity:hover,
.opacity:focus {
	opacity: 1;
}

.transparent:hover,
.transparent:focus {
	background-color: transparent;
}

/* 28. Прозрачность: альфа-канал */
[data-color] {
padding: 0.5rem 1.5rem;
border: none;
background-color: #008;
color: #fff;
font-size: 1.5rem;
}

[data-color="rgba"]:hover {
background-color: rgba(0, 0, 136, .5);
}


[data-color="hsla"]:hover {
background-color: hsla(240, 100%, 27%, .5);
}


[data-color="hexa"]:hover {
background-color: #00008a80;
}